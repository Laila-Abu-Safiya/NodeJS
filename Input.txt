-- Code your testbench here
library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;


entity test is
end test;




architecture behave of test is

component asm is
port(
clk,reset,s : in std_logic;
r1,r2,r3,r4 : in std_logic;
g1,g2,g3,g4 : out std_logic
);
end component;

signal clk,reset,s,r1,r2,r3,r4 : std_logic :='0' ;
signal g1,g2,g3,g4 : std_logic ;
constant clk_period : time := 30ns;
signal temp: std_logic_vector(4 downto 1):="0000";

begin


uut :asm port map(
clk=>clk,
reset=>reset,
s=>s,
r1=>r1,
r2=>r2,
r3=>r3,
r4=>r4,
g1=>g1,
g2=>g2,
g3=>g3,
g4=>g4);



clk_generation : process
begin
clk<='0';
wait for clk_period/2;
clk<='1';
wait for clk_period/2;
end process;

stim_proc : process 

begin

reset<='0';
wait for clk_period*3;
reset<='1';
s<='0';
wait for clk_period*3;
s<='1';

wait for clk_period*3;
r1<=temp(4);
r2<=temp(3);
r3<=temp(2);
r4<=temp(1);
wait for clk_period*3;
for i in 0 to 16 loop
r1<=temp(4);
r2<=temp(3);
r3<=temp(2);
r4<=temp(1);

 temp <= std_logic_vector(to_unsigned(to_integer(unsigned( temp )) + 1, 4));
 wait for clk_period*3;
end loop;
end process;


end behave;